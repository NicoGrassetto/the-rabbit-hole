---
import BaseLayout from '../layouts/BaseLayout.astro';
const pageTitle = "Meet Nick";
---
<BaseLayout pageTitle={pageTitle}>
  <section class="meet-nick">
    <h1>Meet Nick</h1>
    <p>Discover the journey of Nick, a passionate web developer and creator of "The Rabbit Hole."</p>
    <div class="timeline">
      {Array.from({ length: 13 }, (_, i) => (
        <div class="timeline-event" key={i}>
          <div class="timeline-dot"></div>
          <div class="timeline-content">
            <h3>{2020 + i}</h3>
            <p>Event description for year {2020 + i}.</p>
          </div>
        </div>
      ))}
    </div>
  </section>
  <section class="autobiography">
    <h2>About Nick</h2>
    <p>Nick is a passionate web developer with a love for creating sleek, modern websites. His journey began in 2020, and since then, he has explored various technologies, including Astro, to build fast and efficient web applications. "The Rabbit Hole" is his platform to share knowledge, projects, and insights with the world.</p>
    <p>

      I’m currently pursuing a Master’s degree in Computer Science at TU Darmstadt with a focus on distributed software systems. Before that, I maintained the risk decision engine at ZaloPay and improved many of its functionalities. I’m deeply interested in high-performance distributed systems and systems facilitating machine learning and deep learning applications. I love to program recreationally and spend lots of time tinkering with different projects and ideas. Occasionally, I write about things that I find interesting and share them here.

experience
05/2022 - 04/2024: Software Engineer, Risk Management, Zalopay.

Added distributed rate-limiting to the decision engine using the hit rate of a policy, preventing large-scale incidents from happening while deploying new policies.
Added rules dependency analyzer to the decision engine, minimizing duplicated method executions and improving performance.
Added back-filling mechanics to the data ingestion engine utilizing Spark, reducing the time to deploy new policies from several days to a few hours.
Added feature history tracking, allowing snapshots of production features to be made for analytics and backup.
Added feature access monitoring, enabling the team to track frequently read/write features.
Added feature lineage tracking, allowing the team to track the origin of features.
Improved the distributed configuration synchronization system, reducing storage space usage and the latency of distributing new configurations.
Simplified the configuration process for the data ingestion engine, allowing analysts to deploy new policies without the help of engineers.
Migrated back-end services wrapping Tensorflow/CatBoost models from Python to Java, utilizing existing Java libraries and reducing efforts to maintain additional Python code.
Identified and resolved issues using Open Telemetry in the context of Vertx’s non-blocking APIs.
Identified and resolved multiple performance issues involving database table indices and incorrect usages of Vertx’s non-blocking APIs.
Helped analysts translate business requirements into features and rules that can be run on our decision engine.
04/2021 - 09/2021: Software Engineer Intern, Robert Bosch Engineering and Business Solutions Vietnam.

Maintained the application for parsing documentation in source files and rendering the results in PDFs. Corrected the rendered page layout and content as requested by the customer.
Maintained the application that serves customized configurations for Jenkins’ pipelines.
12/2018 - 03/2019: Software Engineer, Thợ Tốt Startup.

Designed and built our MVP.
Won the price for the most innovative idea at “Becamex Startup Idea Battle.”
education
04/2024 - now: M.Sc. Computer Science, Technical University of Darmstadt.

09/2017 - 01/2022: B.Sc. Computer Science and Engineering, Vietnamese-German University and Frankfurt University of Applied Sciences.

Thesis: Assessing COVID-19 Situation in Vietnam Using a Data-Driven Epidemiological Compartmental Model.
Relevant courses: Medical Image Processing, Statistics, Theoretical Computer Science, Algorithms and Data Structures, Object Oriented Programming, Databases, Computer Networks, Operating Systems.
09/2014 - 06/2017: High school diploma, High School of the Gifted, Vietnam National University.

Specialized in Computer Science.
awards
2019: Most innovative idea at “Becamex Startup Idea Battle.”

Successfully pitched our idea of a platform for finding skilled technicians.
2019: Deutscher Akademischer Austauschdienst (DAAD) Scholarship.

Granted funding for an exchange semester at Frankfurt University of Applied Sciences.
2017 - 2020: Vietnamese-German University Merit Scholarships.

Granted 30% tuition in 2020.
Granted 50% tuition in 2019.
Granted 100% tuition in 2017 and 2018.
activities
2019: Coordinated the workshop “Introduction to Programming in Scratch.”

The workshop was one of many from the “VGU STEM Training Workshops 2019” event, which included workshops for high school students with topics across multiple STEM subjects.

2018: Developed the server in “VGU Robocon: Battle Mining Bot 2018.”

“VGU Robocon: Battle Mining Bot 2018” was a competition held by Vietnamese-German University that provided a playground for building autonomous wheeled robots. Here, teams designed robots to collect various objects on the field whose locations were provided in real time through our server.
    </p>
  </section>
  <style>
    .meet-nick {
      margin: 4rem 0;
      text-align: center;
      color: #f5f5f5;
    }
    .meet-nick h1 {
      font-size: 3rem;
      margin-bottom: 1.5rem;
      animation: fadeIn 2s ease-in-out;
    }
    .meet-nick p {
      font-size: 1.2rem;
      margin-bottom: 3rem;
      color: #d3d3d3;
      animation: fadeIn 2.5s ease-in-out;
    }
    .timeline {
      display: flex;
      flex-wrap: nowrap;
      overflow: hidden; /* Hide the horizontal scrollbar */
      padding: 1rem 0;
      max-width: 100%;
      gap: 1rem;
      animation: scrollTimeline 20s linear infinite; /* Add smooth scrolling animation */
    }
    @keyframes scrollTimeline {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(-100%);
      }
    }
    .timeline-event {
      flex-shrink: 0;
      width: calc(100% / 3); /* Make events fit dynamically based on viewport */
      max-width: 300px; /* Set a maximum width for larger screens */
      min-width: 200px; /* Set a minimum width for smaller screens */
      text-align: center;
      scroll-snap-align: center; /* Snap events to the center */
      animation: slideIn 1.5s ease-in-out;
    }
    .timeline-dot {
      width: 12px;
      height: 12px;
      background-color: #007aff;
      border-radius: 50%;
      flex-shrink: 0;
      margin: 0 auto 1rem; /* Center the dot horizontally */
      animation: pulse 2s infinite;
    }
    .timeline-content {
      background-color: #1a1a1a;
      padding: 0.5rem 1rem; /* Adjusted padding for smaller cards */
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(255, 255, 255, 0.1);
      text-align: center; /* Center-align text */
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .timeline-content:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2);
    }
    .timeline-content h3 {
      margin: 0 0 0.5rem;
      font-size: 1rem; /* Reduced font size for titles */
      color: #fff;
    }
    .timeline-content p {
      margin: 0;
      font-size: 0.8rem; /* Reduced font size for descriptions */
      color: #d3d3d3;
    }
    .autobiography {
      margin: 2rem auto;
      max-width: 600px;
      text-align: center;
      color: #d3d3d3;
    }
    .autobiography h2 {
      font-size: 2rem;
      margin-bottom: 1rem;
      color: #fff;
    }
    .autobiography p {
      font-size: 1rem;
      line-height: 1.6;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    @keyframes slideIn {
      from {
        transform: translateX(-50px);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }

    @keyframes pulse {
      0%, 100% {
        transform: scale(1);
        background-color: #007aff;
      }
      50% {
        transform: scale(1.2);
        background-color: #005bb5;
      }
    }

    @media (max-width: 768px) {
      .timeline-event {
        width: calc(100% / 2); /* Adjust for smaller screens */
      }
    }
    @media (max-width: 480px) {
      .timeline-event {
        width: 100%; /* Full width for very small screens */
      }
    }
  </style>
</BaseLayout>